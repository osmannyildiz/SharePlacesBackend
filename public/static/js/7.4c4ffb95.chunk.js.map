{"version":3,"sources":["components/form/ImagePicker.js","pages/AddPlace.js"],"names":["ImagePicker","props","useState","imageFile","setImageFile","previewUrl","setPreviewUrl","isValid","setIsValid","isTouched","setIsTouched","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","type","accept","name","style","display","ref","onChange","event","_imageFile","_isValid","target","files","length","onInput","center","previewWidth","width","src","alt","onClick","current","click","AddPlace","authContext","useContext","AuthContext","history","useHistory","useForm","formState","inputHandler","useHttpClient","sendRequest","isLoading","error","clearError","preventDefault","formData","FormData","append","inputs","title","value","description","address","image","process","Authorization","token","push","console","Fragment","onCancel","asOverlay","onSubmit","label","validators","Validators","required","as","minLength","disabled","marginTop"],"mappings":"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","file":"static/js/7.4c4ffb95.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"./Button\";\nimport \"./ImagePicker.css\";\n\nexport default function ImagePicker(props) {\n\tconst [imageFile, setImageFile] = useState(null);\n\tconst [previewUrl, setPreviewUrl] = useState(null);\n\tconst [isValid, setIsValid] = useState(false);\n\tconst [isTouched, setIsTouched] = useState(false);\n\tconst filePickerRef = useRef();\n\n\t// Generate preview\n\tuseEffect(() => {\n\t\tif (!imageFile) return;\n\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = () => {\n\t\t\tsetPreviewUrl(fileReader.result);\n\t\t};\n\t\tfileReader.readAsDataURL(imageFile);\n\t}, [imageFile]);\n\n\tfunction pickImageHandler(event) {\n\t\tlet _imageFile = imageFile;\n\t\tlet _isValid = isValid;\n\t\tif (event.target.files && event.target.files.length === 1) {\n\t\t\t_imageFile = event.target.files[0];\n\t\t\t_isValid = true;\n\t\t} else {\n\t\t\t_isValid = false;\n\t\t}\n\t\tsetImageFile(_imageFile);\n\t\tsetIsValid(_isValid);\n\t\tsetIsTouched(true);\n\t\tprops.onInput(props.name, _imageFile, _isValid);\n\t}\n\n\treturn (\n\t\t<div className=\"form-control\">\n\t\t\t<input\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".jpg,.jpeg,.png\"\n\t\t\t\tname={props.name}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tref={filePickerRef}\n\t\t\t\tonChange={pickImageHandler}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tclassName={`image-picker ${props.center && \"center\"} ${\n\t\t\t\t\t!isValid && isTouched && \"image-picker--invalid\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"image-picker__preview\"\n\t\t\t\t\tstyle={props.previewWidth ? { width: props.previewWidth } : {}}\n\t\t\t\t>\n\t\t\t\t\t{previewUrl ? (\n\t\t\t\t\t\t<img src={previewUrl} alt=\"Preview\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<strong>Please pick an image.</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<Button type=\"button\" onClick={() => filePickerRef.current.click()}>\n\t\t\t\t\tPICK IMAGE\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../components/form/Button\";\nimport ImagePicker from \"../components/form/ImagePicker\";\nimport Input from \"../components/form/Input\";\nimport ErrorModal from \"../components/ui/ErrorModal\";\nimport Spinner from \"../components/ui/Spinner\";\nimport AuthContext from \"../contexts/authContext\";\nimport useForm from \"../hooks/useForm\";\nimport useHttpClient from \"../hooks/useHttpClient\";\nimport \"../styles/form.css\";\nimport { Validators } from \"../utils/validation\";\n\nexport default function AddPlace() {\n\tconst authContext = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst [formState, inputHandler] = useForm([\n\t\t\"title\",\n\t\t\"description\",\n\t\t\"address\",\n\t\t\"image\",\n\t]);\n\tconst [sendRequest, isLoading, error, clearError] = useHttpClient();\n\n\tasync function submitHandler(event) {\n\t\tevent.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append(\"title\", formState.inputs.title.value);\n\t\tformData.append(\"description\", formState.inputs.description.value);\n\t\tformData.append(\"address\", formState.inputs.address.value);\n\t\tformData.append(\"image\", formState.inputs.image.value);\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_API_URL + \"/places\",\n\t\t\t\t\"POST\",\n\t\t\t\t{\n\t\t\t\t\tAuthorization: \"Bearer \" + authContext.token,\n\t\t\t\t},\n\t\t\t\tformData\n\t\t\t);\n\t\t\thistory.push(\"/\");\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onCancel={clearError} />\n\t\t\t{isLoading && <Spinner asOverlay />}\n\t\t\t<form className=\"form place-add-form\" onSubmit={submitHandler}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"title\"\n\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\tvalidators={[Validators.required()]}\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\tvalidators={[Validators.minLength(5)]}\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"address\"\n\t\t\t\t\tlabel=\"Address\"\n\t\t\t\t\tvalidators={[Validators.required()]}\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t/>\n\t\t\t\t<ImagePicker name=\"image\" previewWidth=\"20rem\" onInput={inputHandler} />\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tdisabled={!formState.isValid}\n\t\t\t\t\tstyle={{ marginTop: \"1.5rem\" }}\n\t\t\t\t>\n\t\t\t\t\tADD PLACE\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</React.Fragment>\n\t);\n}\n"],"sourceRoot":""}