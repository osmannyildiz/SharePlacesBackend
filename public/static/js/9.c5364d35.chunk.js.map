{"version":3,"sources":["pages/EditPlace.js","components/ui/Card.js"],"names":["EditPlace","useState","place","setPlace","authContext","useContext","AuthContext","placeId","useParams","history","useHistory","useHttpClient","sendRequest","isLoading","error","clearError","useForm","formState","inputHandler","setFormData","event","preventDefault","process","Authorization","token","JSON","stringify","title","inputs","value","description","push","userId","console","useEffect","respData","data","isValid","Fragment","onCancel","className","onSubmit","type","name","label","validators","Validators","required","onInput","initialValue","as","minLength","disabled","Card","props","style","children"],"mappings":"qlNAae,SAASA,IACvB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAcC,qBAAWC,KACvBC,EAAYC,cAAZD,QACFE,EAAUC,cAChB,EAAoDC,cAApD,mBAAOC,EAAP,KAAoBC,EAApB,KAA+BC,EAA/B,KAAsCC,EAAtC,KAEA,EAA+CC,YAAQ,CACtD,QACA,gBAFD,mBAAOC,EAAP,KAAkBC,EAAlB,KAAgCC,EAAhC,KAPmC,4CAyCnC,WAA6BC,GAA7B,wEACCA,EAAMC,iBADP,kBAGQT,EACLU,4BAAA,kBAAmDf,GACnD,QACA,CACC,eAAgB,mBAChBgB,cAAe,UAAYnB,EAAYoB,OAExCC,KAAKC,UAAU,CACdC,MAAOV,EAAUW,OAAOD,MAAME,MAC9BC,YAAab,EAAUW,OAAOE,YAAYD,SAZ9C,OAeEpB,EAAQsB,KAAR,iBAAuB3B,EAAY4B,OAAnC,YAfF,gDAiBEC,QAAQnB,MAAR,MAjBF,0DAzCmC,sBA8DnC,OAlDAoB,qBAAU,WACT,sBAAC,+GAEwBtB,EACtBU,4BAAA,kBAAmDf,IAHrD,OAEO4B,EAFP,OAKOjC,EAAQiC,EAASC,KACvBjC,EAASD,GACLA,GACHiB,EACC,CACCQ,MAAO,CACNE,MAAO3B,EAAMyB,MACbU,SAAS,GAEVP,YAAa,CACZD,MAAO3B,EAAM4B,YACbO,SAAS,KAGX,GAnBH,gDAuBCJ,QAAQnB,MAAR,MAvBD,wDAAD,KA0BE,CAACF,EAAaL,EAASY,IAwBzB,kBAAC,IAAMmB,SAAP,KACC,kBAAC,IAAD,CAAYxB,MAAOA,EAAOyB,SAAUxB,IACnCF,GACA,yBAAK2B,UAAU,UACd,kBAAC,IAAD,QAGA3B,IAAcX,GACf,yBAAKsC,UAAU,UACd,kBAAC,IAAD,KACC,2DAIFtC,GACA,0BAAMsC,UAAU,uBAAuBC,SA9EP,6CA+E/B,kBAAC,IAAD,CACCC,KAAK,OACLC,KAAK,QACLC,MAAM,QACNC,WAAY,CAACC,IAAWC,YACxBC,QAAS9B,EACT+B,aAAc/C,EAAMyB,QAErB,kBAAC,IAAD,CACCuB,GAAG,WACHP,KAAK,cACLC,MAAM,cACNC,WAAY,CAACC,IAAWK,UAAU,IAClCH,QAAS9B,EACT+B,aAAc/C,EAAM4B,cAErB,kBAAC,IAAD,CAAQY,KAAK,SAASU,UAAWnC,EAAUoB,SAA3C,oB,gCC5GL,4DAGe,SAASgB,EAAKC,GAC5B,OACC,yBAAKd,UAAS,eAAUc,EAAMd,WAAa,IAAMe,MAAOD,EAAMC,OAC5DD,EAAME,Y","file":"static/js/9.c5364d35.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Button from \"../components/form/Button\";\nimport Input from \"../components/form/Input\";\nimport Card from \"../components/ui/Card\";\nimport ErrorModal from \"../components/ui/ErrorModal\";\nimport Spinner from \"../components/ui/Spinner\";\nimport AuthContext from \"../contexts/authContext\";\nimport useForm from \"../hooks/useForm\";\nimport useHttpClient from \"../hooks/useHttpClient\";\nimport \"../styles/form.css\";\nimport { Validators } from \"../utils/validation\";\n\nexport default function EditPlace() {\n\tconst [place, setPlace] = useState(null);\n\tconst authContext = useContext(AuthContext);\n\tconst { placeId } = useParams();\n\tconst history = useHistory();\n\tconst [sendRequest, isLoading, error, clearError] = useHttpClient();\n\n\tconst [formState, inputHandler, setFormData] = useForm([\n\t\t\"title\",\n\t\t\"description\",\n\t]);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst respData = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_API_URL + `/places/${placeId}`\n\t\t\t\t);\n\t\t\t\tconst place = respData.data;\n\t\t\t\tsetPlace(place);\n\t\t\t\tif (place) {\n\t\t\t\t\tsetFormData(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tvalue: place.title,\n\t\t\t\t\t\t\t\tisValid: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\t\tvalue: place.description,\n\t\t\t\t\t\t\t\tisValid: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t})();\n\t}, [sendRequest, placeId, setFormData]);\n\n\tasync function submitHandler(event) {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_API_URL + `/places/${placeId}`,\n\t\t\t\t\"PATCH\",\n\t\t\t\t{\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\tAuthorization: \"Bearer \" + authContext.token,\n\t\t\t\t},\n\t\t\t\tJSON.stringify({\n\t\t\t\t\ttitle: formState.inputs.title.value,\n\t\t\t\t\tdescription: formState.inputs.description.value,\n\t\t\t\t})\n\t\t\t);\n\t\t\thistory.push(`/users/${authContext.userId}/places`);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onCancel={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<Spinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && !place && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<h2>This place doesn't exist!</h2>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{place && (\n\t\t\t\t<form className=\"form place-edit-form\" onSubmit={submitHandler}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\t\tvalidators={[Validators.required()]}\n\t\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\t\tinitialValue={place.title}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\tvalidators={[Validators.minLength(5)]}\n\t\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\t\tinitialValue={place.description}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button type=\"submit\" disabled={!formState.isValid}>\n\t\t\t\t\t\tUPDATE PLACE\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\n","import React from \"react\";\nimport \"./Card.css\";\n\nexport default function Card(props) {\n\treturn (\n\t\t<div className={`card ${props.className || \"\"}`} style={props.style}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n"],"sourceRoot":""}